# JA Documentation for LLMs

Generated: 2025-03-13T13:13:46.534Z

This file contains structured reference documentation, release notes, and a comprehensive directory of all documentation pages.

# Documentation Directory

## Concepts

- [ao Specs](https://cookbook_ao.arweave.net/ja/concepts/specs.html)
- [aos 簡単ツアー](https://cookbook_ao.arweave.net/ja/concepts/tour.html)
- [aoメッセージングの仕組み](https://cookbook_ao.arweave.net/ja/concepts/how-it-works.html)
- [Holographic State](https://cookbook_ao.arweave.net/ja/concepts/holographic-state.html)
- [Luaの短期ツアー](https://cookbook_ao.arweave.net/ja/concepts/lua.html)
- [Units](https://cookbook_ao.arweave.net/ja/concepts/units.html)
- [コンセプト](https://cookbook_ao.arweave.net/ja/concepts/index.html)
- [プロセス](https://cookbook_ao.arweave.net/ja/concepts/processes.html)
- [メッセージ](https://cookbook_ao.arweave.net/ja/concepts/messages.html)

## Guides

### 0rbit

- [0rbit 💫](https://cookbook_ao.arweave.net/ja/guides/0rbit/index.html)
- [最初のGETリクエスト](https://cookbook_ao.arweave.net/ja/guides/0rbit/get-request.html)
- [最初のPOSTリクエスト](https://cookbook_ao.arweave.net/ja/guides/0rbit/post-request.html)

### Aoconnect

- [ao connectのインストール](https://cookbook_ao.arweave.net/ja/guides/aoconnect/installing-connect.html)
- [aoconnect](https://cookbook_ao.arweave.net/ja/guides/aoconnect/aoconnect.html)
- [aoプロセスからの結果の読み取り](https://cookbook_ao.arweave.net/ja/guides/aoconnect/reading-results.html)
- [Cronの監視](https://cookbook_ao.arweave.net/ja/guides/aoconnect/monitoring-cron.html)
- [DryRunの呼び出し](https://cookbook_ao.arweave.net/ja/guides/aoconnect/calling-dryrun.html)
- [プロセスの生成](https://cookbook_ao.arweave.net/ja/guides/aoconnect/spawning-processes.html)
- [プロセスへのアサインメントの送信](https://cookbook_ao.arweave.net/ja/guides/aoconnect/assign-data.html)
- [プロセスへのメッセージの送信](https://cookbook_ao.arweave.net/ja/guides/aoconnect/sending-messages.html)
- [特定のaoノードへの接続](https://cookbook_ao.arweave.net/ja/guides/aoconnect/connecting.html)

### Aos

#### Blueprints

- [Blueprints](https://cookbook_ao.arweave.net/ja/guides/aos/blueprints/index.html)
- [CRED ユーティリティブループリント](https://cookbook_ao.arweave.net/ja/guides/aos/blueprints/cred-utils.html)
- [ステーキングブループリント](https://cookbook_ao.arweave.net/ja/guides/aos/blueprints/staking.html)
- [チャットルームブループリント](https://cookbook_ao.arweave.net/ja/guides/aos/blueprints/chatroom.html)
- [トークンブループリント](https://cookbook_ao.arweave.net/ja/guides/aos/blueprints/token.html)
- [投票ブループリント](https://cookbook_ao.arweave.net/ja/guides/aos/blueprints/voting.html)

#### Modules

- [ao](https://cookbook_ao.arweave.net/ja/guides/aos/modules/ao.html)
- [Base64](https://cookbook_ao.arweave.net/ja/guides/aos/modules/base64.html)
- [crypto](https://cookbook_ao.arweave.net/ja/guides/aos/modules/crypto.html)
- [JSON](https://cookbook_ao.arweave.net/ja/guides/aos/modules/json.html)
- [Pretty](https://cookbook_ao.arweave.net/ja/guides/aos/modules/pretty.html)
- [Utils](https://cookbook_ao.arweave.net/ja/guides/aos/modules/utils.html)
- [モジュール](https://cookbook_ao.arweave.net/ja/guides/aos/modules/index.html)

- [.load](https://cookbook_ao.arweave.net/ja/guides/aos/load.html)
- [`ao`でのトークンの構築](https://cookbook_ao.arweave.net/ja/guides/aos/token.html)
- [ao.linkを使用したトラブルシューティング](https://cookbook_ao.arweave.net/ja/guides/aos/troubleshooting.html)
- [aos](https://cookbook_ao.arweave.net/ja/guides/aos/index.html)
- [aosでPingpongプロセスを作成する](https://cookbook_ao.arweave.net/ja/guides/aos/pingpong.html)
- [aosでのプロンプトのカスタマイズ](https://cookbook_ao.arweave.net/ja/guides/aos/prompt.html)
- [CLI](https://cookbook_ao.arweave.net/ja/guides/aos/cli.html)
- [FAQ](https://cookbook_ao.arweave.net/ja/guides/aos/faq.html)
- [Inboxの理解](https://cookbook_ao.arweave.net/ja/guides/aos/inbox-and-handlers.html)
- [Installing aos](https://cookbook_ao.arweave.net/ja/guides/aos/installing.html)
- [エディタ設定](https://cookbook_ao.arweave.net/ja/guides/aos/editor.html)
- [はじめに](https://cookbook_ao.arweave.net/ja/guides/aos/intro.html)

### Betteridea

- [BetterIDEa](https://cookbook_ao.arweave.net/ja/guides/betteridea/index.html)

- [ガイド](https://cookbook_ao.arweave.net/ja/guides/index.html)

## References

- [aoトークンおよびサブレッジャー仕様](https://cookbook_ao.arweave.net/ja/references/token.html)
- [aoモジュール](https://cookbook_ao.arweave.net/ja/references/ao.html)
- [aoを使ってArweaveからデータにアクセスする](https://cookbook_ao.arweave.net/ja/references/data.html)
- [Cronメッセージ](https://cookbook_ao.arweave.net/ja/references/cron.html)
- [Eval](https://cookbook_ao.arweave.net/ja/references/eval.html)
- [Luaに触れてみよう](https://cookbook_ao.arweave.net/ja/references/lua.html)
- [Web Assemblyについて](https://cookbook_ao.arweave.net/ja/references/wasm.html)
- [エディタのセットアップ](https://cookbook_ao.arweave.net/ja/references/editor-setup.html)
- [コミュニティ](https://cookbook_ao.arweave.net/ja/references/community.html)
- [ハンドラ (バージョン 0.0.5)](https://cookbook_ao.arweave.net/ja/references/handlers.html)
- [参考資料](https://cookbook_ao.arweave.net/ja/references/index.html)

## Tutorials

### Begin

- [`The Construct`に入る - インタラクティブチュートリアル](https://cookbook_ao.arweave.net/ja/tutorials/begin/rabbithole.html)
- [aosでチャットルームを構築する](https://cookbook_ao.arweave.net/ja/tutorials/begin/chatroom.html)
- [aoにおけるメッセージング](https://cookbook_ao.arweave.net/ja/tutorials/begin/messaging.html)
- [DAO ガイド](https://cookbook_ao.arweave.net/ja/tutorials/begin/dao.html)
- [チャットルームのトークンゲート](https://cookbook_ao.arweave.net/ja/tutorials/begin/tokengating.html)
- [トークンの作成](https://cookbook_ao.arweave.net/ja/tutorials/begin/token.html)
- [始めよう: インタラクティブチュートリアル](https://cookbook_ao.arweave.net/ja/tutorials/begin/index.html)
- [準備](https://cookbook_ao.arweave.net/ja/tutorials/begin/preparations.html)

### Bots and games

- [Bringing it Together](https://cookbook_ao.arweave.net/ja/tutorials/bots-and-games/bringing-together.html)
- [アリーナのメカニクス](https://cookbook_ao.arweave.net/ja/tutorials/bots-and-games/arena-mechanics.html)
- [アリーナの拡張](https://cookbook_ao.arweave.net/ja/tutorials/bots-and-games/build-game.html)
- [お知らせの解釈](https://cookbook_ao.arweave.net/ja/tutorials/bots-and-games/announcements.html)
- [ゲームをプレイしよう！](https://cookbook_ao.arweave.net/ja/tutorials/bots-and-games/ao-effect.html)
- [ゲーム状態の取得](https://cookbook_ao.arweave.net/ja/tutorials/bots-and-games/game-state.html)
- [ボットとゲーム](https://cookbook_ao.arweave.net/ja/tutorials/bots-and-games/index.html)
- [戦略的決定](https://cookbook_ao.arweave.net/ja/tutorials/bots-and-games/decisions.html)
- [自動応答](https://cookbook_ao.arweave.net/ja/tutorials/bots-and-games/attacking.html)

- [Index](https://cookbook_ao.arweave.net/ja/tutorials/index.html)

## Welcome

### Testnet info

- [aoテストネットに参加しよう](https://cookbook_ao.arweave.net/ja/welcome/testnet-info/index.html)
- [クエストFAQ](https://cookbook_ao.arweave.net/ja/welcome/testnet-info/quests.html)

- [5分で始める](https://cookbook_ao.arweave.net/ja/welcome/getting-started.html)
- [aoへようこそ](https://cookbook_ao.arweave.net/ja/welcome/index.html)

- [LLMs ファイルドキュメント](https://cookbook_ao.arweave.net/ja/llms-explanation.html)



# Detailed Content

## TABLE OF CONTENTS

- API AND FUNCTION REFERENCES
  - aoモジュール
  - コミュニティ
  - Cronメッセージ
  - aoを使ってArweaveからデータにアクセスする
  - エディタのセットアップ
  - Eval
  - ハンドラ (バージョン 0.0.5)
  - 参考資料
  - Luaに触れてみよう
  - aoトークンおよびサブレッジャー仕様
  - Web Assemblyについて



## API AND FUNCTION REFERENCES



### aoモジュール
Source: https://cookbook_ao.arweave.net/ja/references/ao.html

### API Definitions
- Properties
- send
- Methods
- send
- spawn
- spawn
- isTrusted
- isTrusted

### Parameters
|
| ----------- | ------------------------------------------------------------------------------------------------------------ | ------ |
| id          | Process Identifier (TXID)                                                                                    | string |
| \_module    | Module Identifier (TXID)                                                                                     | string |
| authorities | Set of Trusted TXs                                                                                           | string |
| Authority   | Identifiers that the process is able to accept transactions from that are not the owner or the process (0-n) | string |
| \_version   | The version of the library                                                                                   | string |
| env         | Evaluation Environment                                                                                       | string |
| outbox      | Holds Messages and Spawns for response                                                                       | object |


### Parameters
|
| ------ | --------------------------------------------------------------------------------------- | ------ |
| module | The TXID that identifies the module binary to use to instaniate the process with        | string |
| spawn  | The `spawn` full or parital table object that contains the `Data` and `Tags` properties | table  |


### Parameters
|
| ---- | ------------------------------------------- | ----- |
| msg  | Message to check if trusted by this process | table |



### コミュニティ
Source: https://cookbook_ao.arweave.net/ja/references/community.html

[Autonomous Finance](https://www.autonomous.finance/)

### Cronメッセージ
Source: https://cookbook_ao.arweave.net/ja/references/cron.html

### API Definitions
- Setting
- Handling
- cron


### aoを使ってArweaveからデータにアクセスする
Source: https://cookbook_ao.arweave.net/ja/references/data.html

<!-- # Accessing Data from Arweave with ao

### エディタのセットアップ
Source: https://cookbook_ao.arweave.net/ja/references/editor-setup.html

### API Definitions
- VS
- BetterIDEa


### Eval
Source: https://cookbook_ao.arweave.net/ja/references/eval.html

### API Definitions
- NodeJS


### ハンドラ (バージョン 0.0.5)
Source: https://cookbook_ao.arweave.net/ja/references/handlers.html

### API Definitions
- Overview
- Concepts
- Pattern
- Handler
- Functions
- `Handlers.add
- `Handlers.append
- `Handlers.once
- `Handlers.prepend
- `Handlers.before
- `Handlers.after
- `Handlers.remove
- Examples
- Using
- `Handlers.add
- `Handlers.append
- `Handlers.once
- `Handlers.prepend
- `Handlers.before
- `Handlers.after
- `Handlers.remove
- Using
- Using
- Notes
- Handlers.utils
- Handlers.utils.hasMatchingData
- Handlers.utils
- Handlers.utils.hasMatchingData
- Handlers.hasMatchingTag
- Handlers.hasMatchingTag
- Handlers.reply
- Handlers.reply

### Code Examples
```
<!-- ### Handlers.reply(text : string)

This helper is a simple handle function, it basically places the text value in to the Data property of the outbound message. -->

### Handlers.reply(text : string)

このヘルパーはシンプルなハンドル関数で、基本的にテキストの値を送信メッセージのDataプロパティに設定します。
```


### Parameters
|
| ------------------ | ---------------------------- ||
| name               | string                       | The identifier of the handler item in the handlers list|
| pattern            | Table or Function            | This parameter can take a table that specifies a pattern that the message MUST match, for example `{ Action = "Balance", Recipient = "_" }` this table describes a message that has a Tag called action and it equals the string "Balance", and the message MUST have a Recipient Tag with a value. If you are unable to add a pattern via a table, you can also use the `function` which receives the message DataItem as its argument and you can return a `true`, `false` or `"continue"` result. The `true` result tells the Handlers evaluation pipeline to invoke this handler and exit out of the pipeline. The `false` result tells the Handlers evaluation pipeline to skip this handler and try to find a pattern matched by the next Handler item in the pipeline. Finally, the `"continue"` informs the Handlers evaluation to invoke this handler and continue evaluating. |
| handler            | Table (Resolver) or Function | This parameter can take a table that acts as a conditional that invokes a function based on a pattern matched key. or a Function that takes the message DataItem as an argument and performs some business logic|
| maxRuns (optional) | number                       | As of 0.0.5, each handler function takes an optional function to define the amount of times the handler should match before it is removed. The default is infinity|



### 参考資料
Source: https://cookbook_ao.arweave.net/ja/references/index.html

## 目次

- [Lua](lua)...

### Luaに触れてみよう
Source: https://cookbook_ao.arweave.net/ja/references/lua.html

### API Definitions
- Understanding
- Setting
- Basic
- Lua
- Hands
- Resources
- Best
- Conclusion


### aoトークンおよびサブレッジャー仕様
Source: https://cookbook_ao.arweave.net/ja/references/token.html

### API Definitions
- Spawning
- Balance
- Messaging
- Balance
- Balances
- Balances
- Transfer
- Transfer
- Get
- Mint
- Spawning
- `Credit
- Transfer
- `Credit
- Transfer
- Withdraw
- Withdraw

### Code Examples
```
<!--
### Balances()

Returns the balance of all participants in the token. -->

### Balances()

トークンのすべての参加者の残高を返します。
```

```
<!-- Recipients will infer from the `From-Process` tag of the message which tokens they have received. -->

受取人は、メッセージの`From-Process`タグから、どのトークンを受け取ったかを推測します。

### Get-Info()
```

```
### Mint() [optional]

<!-- Implementing a `Mint` action gives the process a way of allowing valid participants to create new tokens. -->

`Mint`アクションを実装することで、プロセスは有効な参加者に新しいトークンを作成する方法を提供します。
```


### Parameters
|
| -------- | ------------------------------------------------------------------------------------------------------ | ------------------ |
| Balance  | get the balance of an identifer                                                                        | :heavy_check_mark: |
| Balances | get a list of all ledger/account balances                                                              | :heavy_check_mark: |
| Transfer | send 1 or more units from the callers balance to one or move targets with the option to notify targets | :x:                |
| Mint     | if the ledger process is the root and you would like to increase token supply                          | :x:                |


### Parameters
|
| ------------ | --------------------------------------------------------------------------------------------------------------------- | ------------------ |
| Name         | The title of the token, as it should be displayed to users.                                                           | :heavy_check_mark: |
| Ticker       | A suggested shortened name for the token, such that it can be referenced quickly.                                     | :heavy_check_mark: |
| Logo         | An image that applications may deserire to show next to the token, in order to make it quickly visually identifiable. | :heavy_check_mark: |
| Denomination | The number of the token that should be treated as a single unit when quantities and balances are displayed to users.  | :x:                |


### Parameters
|
| ------------ | ------------------------------------------------------------------ | --------- |
| Source-Token | The `ID` of the top-most process that this subledger represents.   | :x:       |
| Parent-Token | The `ID` of the parent process that this subledger is attached to. | :x:       |



### Web Assemblyについて
Source: https://cookbook_ao.arweave.net/ja/references/wasm.html

WebAssembly (often abbreviated as Wasm) is a modern binary instruction format providing a portable compilation target for high-level languages like C, C++, and Rust. It enables deployment on the web for client and server applications, offering a high level of performance and efficiency. WebAssembly is designed to maintain the security and sandboxing features of web browsers, making it a suitable choice for web-based applications. It's a key technology for web developers, allowing them to write code in multiple languages and compile it into bytecode that runs in the browser at near-native speed.

# Summary

Total files processed: 11
Total documentation pages: 82
This documentation is focused on technical references and release notes, prioritizing accuracy and relevance for LLM processing.
